{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //Reducers\n\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nvar reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  ordeListMy: orderListMyReducer\n});\nvar cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nvar userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nvar shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nvar initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nvar middleware = [thunk];\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","orderPay","ordeListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/Users/alexbrown/Desktop/proshop/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n//Reducers\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    ordeListMy: orderListMyReducer,\n    \n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse\n(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n? JSON.parse(localStorage.getItem('userInfo'))\n: null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n? JSON.parse(localStorage.getItem('shippingAddress'))\n: {}\n\n\nconst initialState = {\n    cart: { \n        cartItems: cartItemsFromStorage, \n        shippingAddress: shippingAddressFromStorage \n    },\n    userLogin: { userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    reducer, \n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,EAA8FC,eAA9F,EAA+GC,iBAA/G,QAAwI,yBAAxI;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,EAAmEC,kBAAnE,QAA6F,0BAA7F;AAEA,IAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC5BkB,WAAW,EAAEd,kBADe;EAE5Be,cAAc,EAAEd,qBAFY;EAG5Be,IAAI,EAAEd,WAHsB;EAI5Be,SAAS,EAAEd,gBAJiB;EAK5Be,YAAY,EAAEd,mBALc;EAM5Be,WAAW,EAAEd,kBANe;EAO5Be,iBAAiB,EAAEd,wBAPS;EAQ5Be,QAAQ,EAAEd,eARkB;EAS5Be,UAAU,EAAEd,iBATgB;EAU5Be,WAAW,EAAEd,kBAVe;EAW5Be,YAAY,EAAEd,mBAXc;EAY5Be,QAAQ,EAAEd,eAZkB;EAa5Be,UAAU,EAAEd;AAbgB,CAAD,CAA/B;AAiBA,IAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACS,EADtC;AAGA,IAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,IAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAKA,IAAMK,YAAY,GAAG;EACjBlB,IAAI,EAAE;IACFmB,SAAS,EAAER,oBADT;IAEFS,eAAe,EAAEH;EAFf,CADW;EAKjBhB,SAAS,EAAE;IAAEoB,QAAQ,EAAEL;EAAZ;AALM,CAArB;AAQA,IAAMM,UAAU,GAAG,CAACxC,KAAD,CAAnB;AAEA,IAAMyC,KAAK,GAAG5C,WAAW,CACrBkB,OADqB,EAErBqB,YAFqB,EAGrBnC,mBAAmB,CAACF,eAAe,MAAf,SAAmByC,UAAnB,CAAD,CAHE,CAAzB;AAKA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}