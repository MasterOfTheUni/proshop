{"ast":null,"code":"import _slicedToArray from \"/Users/alexbrown/Desktop/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nvar ProductEditScreen = function ProductEditScreen() {\n  var _useParams = useParams(),\n      productId = _useParams.productId;\n\n  var navigate = useNavigate();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      brand = _useState8[0],\n      setBrand = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      category = _useState10[0],\n      setCategory = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      countInStock = _useState12[0],\n      setCountInStock = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      description = _useState14[0],\n      setDescription = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var dispatch = useDispatch();\n  var productDetails = useSelector(function (state) {\n    return state.productDetails;\n  });\n  var loading = productDetails.loading,\n      error = productDetails.error,\n      product = productDetails.product; // const productUpdate = useSelector((state) => state.productUpdate)\n  // const {\n  //   loading: loadingUpdate,\n  //   error: errorUpdate,\n  //   success: successUpdate,\n  // } = productUpdate\n  // useEffect(() => {\n  //   if (successUpdate) {\n  //       dispatch({ type: PRODUCT_UPDATE_RESET })\n  //       navigate('/admin/productlist')\n  //   } else {\n  //       if (!product.name || product._id !== productId) {\n  //           dispatch(listProductDetails(productId))\n  //       } else {\n  //           setName(product.name)\n  //           setPrice(product.price)\n  //           setImage(product.image)\n  //           setBrand(product.brand)\n  //           setCategory(product.category)\n  //           setCountInStock(product.countInStock)\n  //           setDescription(product.description)\n  //       }\n  //   }\n  // }, [dispatch, navigate, productId, product, successUpdate])\n  // const uploadFileHandler = async (e) => {\n  //   const file = e.target.files[0]\n  //   const formData = new FormData()\n  //   formData.append('image', file)\n  //   setUploading(true)\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-Type': 'multipart/form-data',\n  //       },\n  //     }\n  //     const { data } = await axios.post('/api/upload', formData, config)\n  //     setImage(data)\n  //     setUploading(false)\n  //   } catch (error) {\n  //     console.error(error)\n  //     setUploading(false)\n  //   }\n  // }\n  // const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   // UPDATE PRODUCT\n  //   dispatch(\n  //       updateProduct({\n  //         _id: productId,\n  //         name,\n  //         price,\n  //         image,\n  //         brand,\n  //         category,\n  //         description,\n  //         countInStock,\n  //       })\n  //     )\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Testing\");\n};\n\nexport default ProductEditScreen;","map":{"version":3,"names":["axios","React","useState","useEffect","Link","useParams","useNavigate","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","productId","navigate","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product"],"sources":["/Users/alexbrown/Desktop/proshop/frontend/src/screens/ProductEditScreen.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link, useParams, useNavigate} from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\n\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nconst ProductEditScreen = () => {\n    const { productId } = useParams()\n\n    const navigate = useNavigate()\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  // const productUpdate = useSelector((state) => state.productUpdate)\n  // const {\n  //   loading: loadingUpdate,\n  //   error: errorUpdate,\n  //   success: successUpdate,\n  // } = productUpdate\n\n  // useEffect(() => {\n  //   if (successUpdate) {\n  //       dispatch({ type: PRODUCT_UPDATE_RESET })\n  //       navigate('/admin/productlist')\n  //   } else {\n  //       if (!product.name || product._id !== productId) {\n  //           dispatch(listProductDetails(productId))\n  //       } else {\n  //           setName(product.name)\n  //           setPrice(product.price)\n  //           setImage(product.image)\n  //           setBrand(product.brand)\n  //           setCategory(product.category)\n  //           setCountInStock(product.countInStock)\n  //           setDescription(product.description)\n  //       }\n  //   }\n  // }, [dispatch, navigate, productId, product, successUpdate])\n\n  // const uploadFileHandler = async (e) => {\n  //   const file = e.target.files[0]\n  //   const formData = new FormData()\n  //   formData.append('image', file)\n  //   setUploading(true)\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         'Content-Type': 'multipart/form-data',\n  //       },\n  //     }\n\n  //     const { data } = await axios.post('/api/upload', formData, config)\n\n  //     setImage(data)\n  //     setUploading(false)\n  //   } catch (error) {\n  //     console.error(error)\n  //     setUploading(false)\n  //   }\n  // }\n\n  // const submitHandler = (e) => {\n  //   e.preventDefault()\n\n  //   // UPDATE PRODUCT\n  //   dispatch(\n  //       updateProduct({\n  //         _id: productId,\n  //         name,\n  //         price,\n  //         image,\n  //         brand,\n  //         category,\n  //         description,\n  //         countInStock,\n  //       })\n  //     )\n  // }\n\n  return (\n    <>\n      Testing\n      {/* <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer> */}\n    </>\n  )\n}\n\nexport default ProductEditScreen"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,2BAAlD;AAEA,SAASC,oBAAT,QAAqC,+BAArC;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EAAA,iBACNZ,SAAS,EADH;EAAA,IACpBa,SADoB,cACpBA,SADoB;;EAG5B,IAAMC,QAAQ,GAAGb,WAAW,EAA5B;;EAH4B,gBAKNJ,QAAQ,CAAC,EAAD,CALF;EAAA;EAAA,IAKvBkB,IALuB;EAAA,IAKjBC,OALiB;;EAAA,iBAMJnB,QAAQ,CAAC,CAAD,CANJ;EAAA;EAAA,IAMvBoB,KANuB;EAAA,IAMhBC,QANgB;;EAAA,iBAOJrB,QAAQ,CAAC,EAAD,CAPJ;EAAA;EAAA,IAOvBsB,KAPuB;EAAA,IAOhBC,QAPgB;;EAAA,iBAQJvB,QAAQ,CAAC,EAAD,CARJ;EAAA;EAAA,IAQvBwB,KARuB;EAAA,IAQhBC,QARgB;;EAAA,iBASEzB,QAAQ,CAAC,EAAD,CATV;EAAA;EAAA,IASvB0B,QATuB;EAAA,IASbC,WATa;;EAAA,kBAUU3B,QAAQ,CAAC,CAAD,CAVlB;EAAA;EAAA,IAUvB4B,YAVuB;EAAA,IAUTC,eAVS;;EAAA,kBAWQ7B,QAAQ,CAAC,EAAD,CAXhB;EAAA;EAAA,IAWvB8B,WAXuB;EAAA,IAWVC,cAXU;;EAAA,kBAYI/B,QAAQ,CAAC,KAAD,CAZZ;EAAA;EAAA,IAYvBgC,SAZuB;EAAA,IAYZC,YAZY;;EAc9B,IAAMC,QAAQ,GAAG3B,WAAW,EAA5B;EAEA,IAAM4B,cAAc,GAAG3B,WAAW,CAAC,UAAC4B,KAAD;IAAA,OAAWA,KAAK,CAACD,cAAjB;EAAA,CAAD,CAAlC;EAhB8B,IAiBtBE,OAjBsB,GAiBMF,cAjBN,CAiBtBE,OAjBsB;EAAA,IAiBbC,KAjBa,GAiBMH,cAjBN,CAiBbG,KAjBa;EAAA,IAiBNC,OAjBM,GAiBMJ,cAjBN,CAiBNI,OAjBM,EAmB9B;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE,oDADF;AAqGD,CA3LD;;AA6LA,eAAexB,iBAAf"},"metadata":{},"sourceType":"module"}