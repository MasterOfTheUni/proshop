{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["/Users/alexbrown/Desktop/proshop/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\"\nimport { \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n} from \"../constants/userConstants\"\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login', \n            { email, password },\n            config\n            )\n        \n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: \n                error.response && error.response.data.message \n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users', \n            { name, email, password },\n            config\n            )\n        \n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: \n                error.response && error.response.data.message \n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState() \n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}`, \n            config\n            )\n        \n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n        } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: \n                error.response && error.response.data.message \n                ? error.response.data.message\n                : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState() \n\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile`,\n            user,  \n            config\n            )\n        \n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: \n                error.response && error.response.data.message \n                ? error.response.data.message\n                : error.message\n        })\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}